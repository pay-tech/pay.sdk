// dist
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def version_code = VERSION_CODE
def version_name = VERSION_NAME
def group_id = SDK_GROUP_ID
def artifact_id = SDK_ARTIFACT_ID

ext.local = [
        app_version: "V${version_name}(${version_code})",
        aar_name   : "${project.name.toUpperCase()}_V${version_name}(${version_code})_${VARIANT}_Build_${global.build_time}.aar",
        app_flavor : "${camelCase(FLAVOR)}",
]

def AAR_DIR = "${rootProject.projectDir}/out/aar${!isEmpty(local.app_flavor) ? '/' + local.app_flavor : ''}/${local.app_version}"
def ORIGIN_AAR_NAME = "${project.name}${!isEmpty(local.app_flavor) ? '-' + local.app_flavor : ''}-release.aar"

task dist(type: Copy) {
    doFirst {
        File apkDir = new File(AAR_DIR)
        apkDir.deleteDir()
    }
    from "${buildDir}/outputs/aar/$ORIGIN_AAR_NAME"
    from "${buildDir}/outputs/mapping${local.app_flavor != null ? '/' + local.app_flavor : ''}/release/mapping.txt"
    into AAR_DIR
    rename { String fileName ->
        fileName.replace("$ORIGIN_AAR_NAME", "${local.aar_name}")
    }
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

publishing {
    publications {
        BintrayPublication(MavenPublication) {
            groupId "${group_id}"
            version "${version_name}"
            artifact source: "${project.buildDir}/outputs/aar/${ORIGIN_AAR_NAME}"
            artifact sourcesJar
            artifactId artifact_id
            pom.withXml {
                def root = asNode()
                def dependencies = root.appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        dependencies.append(getDependencyNode('compile', it.group, it.name, it.version))
                    }
                }
            }
        }
    }
}

static def isEmpty(String str) {
    return str == null || str.length() == 0;
}

static def getDependencyNode(scope, groupId, artifactId, version) {
    Node node = new Node(null, 'dependency')
    node.appendNode('groupId', groupId)
    node.appendNode('artifactId', artifactId)
    node.appendNode('version', version)
    node.appendNode('scope', scope)
    return node
}

static String camelCase(String self) {
    if (isEmpty(self)) {
        return ''
    }
    def newName = self.split("_").collect() {
        it.substring(0, 1).toUpperCase() + it.substring(1, it.length())
    }.join()
    newName.substring(0, 1).toLowerCase() + newName.substring(1, newName.length())
}

afterEvaluate {
    tasks.withType(PublishToMavenRepository) { task ->
        if (task.publication.hasProperty('repo') && task.publication.repo != task.repository.name) {
            task.enabled = false
            task.group = null
        }
    }
}

def siteUrl = 'https://github.com/pay-tech'
def gitUrl = 'https://github.com/pay-tech/pay.sdk.git'
version = version_name
group = group_id
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'tdshopsdk'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

bintray {
    user = properties["bintray.usr"]
    key = properties["bintray.key"]
    configurations = ['archives']
    publications = ['BintrayPublication']
    pkg {
        userOrg = 'pay-tech'
        publicDownloadNumbers = true
        repo = BINTRAY_REPO
        name = "tec-pay"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        override = false
        labels = ['aar', 'android', 'tec-pay']
        version {
            name = version_name
            vcsTag = version_name
        }
    }
}

